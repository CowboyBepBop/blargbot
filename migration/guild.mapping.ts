/* Autogenerated mapping by /home/danny/projects/blargbot/blargbot/migration/createMappingsFromRethink.js */

import { mapping } from '@core/utils';

export type OldRethinkGuild = Extract<ReturnType<typeof mapGuild>, { valid: true; }>['value'];
export const mapGuild = mapping.object({
    ['active']: mapping.boolean,
    ['ccommands']: mapping.record(mapping.object({
        ['author']: mapping.string.optional,
        ['content']: mapping.string.optional,
        ['hidden']: mapping.boolean.optional,
        ['managed']: mapping.boolean.optional,
        ['authorizer']: mapping.string.optional,
        ['roles']: mapping.array(mapping.string).optional,
        ['alias']: mapping.string.optional,
        ['cooldown']: mapping.number.optional,
        ['help']: mapping.string.optional,
        ['flags']: mapping.array(mapping.object({
            ['desc']: mapping.string,
            ['flag']: mapping.string,
            ['word']: mapping.string
        })).optional,
        ['lang']: mapping.string.optional
    }).optional),
    ['channels']: mapping.record(mapping.object({
        ['blacklisted']: mapping.boolean,
        ['nsfw']: mapping.boolean
    }).optional),
    ['commandperms']: mapping.record(mapping.object({
        ['rolename']: mapping.array(mapping.string).nullish,
        ['permission']: mapping.number.nullish,
        ['disabled']: mapping.boolean.optional
    }).optional),
    ['guildid']: mapping.string,
    ['modlog']: mapping.array(mapping.object({
        ['caseid']: mapping.number,
        ['modid']: mapping.string.nullable,
        ['msgid']: mapping.string.optional,
        ['reason']: mapping.string,
        ['type']: mapping.string,
        ['userid']: mapping.string.optional
    })),
    ['name']: mapping.string,
    ['settings']: mapping.object({
        ['prefix']: mapping.array(mapping.string).optional,
        ['social']: mapping.boolean.optional,
        ['tableflip']: mapping.boolean.optional,
        ['greetchan']: mapping.string.optional,
        ['greeting']: mapping.choice(
            mapping.object({
                ['author']: mapping.string,
                ['authorizer']: mapping.string,
                ['content']: mapping.string
            }),
            mapping.string
        ).optional,
        ['makelogs']: mapping.boolean.optional,
        ['permoverride']: mapping.boolean.optional,
        ['modlog']: mapping.string.optional,
        ['adminrole']: mapping.string.optional,
        ['banat']: mapping.number.optional,
        ['mutedrole']: mapping.string.optional,
        ['staffperms']: mapping.number.optional,
        ['kickat']: mapping.number.optional,
        ['antimention']: mapping.number.optional,
        ['banoverride']: mapping.number.optional,
        ['disableeveryone']: mapping.boolean.optional,
        ['farewell']: mapping.choice(
            mapping.object({
                ['author']: mapping.string,
                ['authorizer']: mapping.string,
                ['content']: mapping.string
            }),
            mapping.string
        ).optional,
        ['farewellchan']: mapping.string.optional,
        ['kickoverride']: mapping.number.optional,
        ['cahnsfw']: mapping.boolean.optional,
        ['nocleverbot']: mapping.boolean.optional,
        ['deletenotif']: mapping.boolean.optional,
        ['disablenoperms']: mapping.boolean.optional,
        ['dmhelp']: mapping.boolean.optional,
        ['actonlimitsonly']: mapping.boolean.optional
    }),
    ['autoresponse']: mapping.object({
        ['everything']: mapping.object({
            ['executes']: mapping.string,
            ['regex']: mapping.boolean,
            ['term']: mapping.string,
            ['weight']: mapping.number
        }).nullable,
        ['index']: mapping.number,
        ['list']: mapping.array(mapping.object({
            ['executes']: mapping.string,
            ['regex']: mapping.boolean,
            ['term']: mapping.string,
            ['weight']: mapping.number
        }))
    }).optional,
    ['log']: mapping.record(mapping.string.optional).optional,
    ['logIgnore']: mapping.array(mapping.string).optional,
    ['votebans']: mapping.record(mapping.array(mapping.object({
        ['id']: mapping.string,
        ['reason']: mapping.string.optional
    })).optional).optional,
    ['roleme']: mapping.array(mapping.object({
        ['add']: mapping.array(mapping.string),
        ['casesensitive']: mapping.boolean,
        ['channels']: mapping.array(mapping.string),
        ['message']: mapping.string,
        ['remove']: mapping.array(mapping.string),
        ['output']: mapping.string.optional
    })).optional,
    ['censor']: mapping.object({
        ['cases']: mapping.object({}),
        ['exception']: mapping.object({
            ['channel']: mapping.array(mapping.string),
            ['role']: mapping.array(mapping.string),
            ['user']: mapping.array(mapping.string)
        }),
        ['list']: mapping.array(mapping.object({
            ['deleteMessage']: mapping.string.optional,
            ['regex']: mapping.boolean,
            ['term']: mapping.string,
            ['weight']: mapping.number,
            ['reason']: mapping.string.optional,
            ['decancer']: mapping.boolean.optional,
            ['banMessage']: mapping.string.optional,
            ['kickMessage']: mapping.string.optional
        })),
        ['rule']: mapping.object({
            ['deleteMessage']: mapping.string.optional,
            ['banMessage']: mapping.string.optional,
            ['kickMessage']: mapping.string.optional
        })
    }).optional,
    ['warnings']: mapping.object({
        ['users']: mapping.record(mapping.number.optional)
    }).optional,
    ['announce']: mapping.object({
        ['channel']: mapping.string,
        ['role']: mapping.string
    }).optional
});
